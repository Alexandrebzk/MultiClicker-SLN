<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppTitle" xml:space="preserve">
    <value>MultiClicker</value>
  </data>
  <data name="CloseButton" xml:space="preserve">
    <value>X</value>
  </data>
  <data name="HelpButton" xml:space="preserve">
    <value>?</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Keybinds" xml:space="preserve">
    <value>Keybinds</value>
  </data>
  <data name="KeybindsButton" xml:space="preserve">
    <value>⌨</value>
  </data>
  <data name="KeybindsTooltip" xml:space="preserve">
    <value>Keyboard Shortcuts Configuration</value>
  </data>
  <data name="ErrorOpeningKeybinds" xml:space="preserve">
    <value>Error opening keyboard shortcuts configuration: {0}</value>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="KeybindsFormTitle" xml:space="preserve">
    <value>Keyboard Shortcuts Configuration</value>
  </data>
  <data name="KeybindsInstructions" xml:space="preserve">
    <value>Click on a field then press keys and/or click with the mouse (left, right, middle, X1, X2) to define the shortcut. The initial click is not recorded.</value>
  </data>
  <data name="ActionColumn" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="ShortcutColumn" xml:space="preserve">
    <value>Shortcut</value>
  </data>
  <data name="ClearColumn" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ClearButton" xml:space="preserve">
    <value>✖</value>
  </data>
  <data name="PressKeysPrompt" xml:space="preserve">
    <value>Press keys and/or click...</value>
  </data>
  <data name="ReadyToCapture" xml:space="preserve">
    <value>Ready to capture...</value>
  </data>
  <data name="SaveButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ResetButton" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ConfigSavedSuccessfully" xml:space="preserve">
    <value>Configuration saved successfully!</value>
  </data>
  <data name="SuccessTitle" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="ResetConfirmation" xml:space="preserve">
    <value>Are you sure you want to reset all shortcuts?</value>
  </data>
  <data name="ConfirmationTitle" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="TriggerNameColumn" xml:space="preserve">
    <value>Trigger Name</value>
  </data>
  <data name="PositionColumn" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="UpdateColumn" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="ColorColumn" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="UpdateButton" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="SELECT_NEXT" xml:space="preserve">
    <value>Select Next Character</value>
  </data>
  <data name="SELECT_PREVIOUS" xml:space="preserve">
    <value>Select Previous Character</value>
  </data>
  <data name="SIMPLE_CLICK" xml:space="preserve">
    <value>Simple Click</value>
  </data>
  <data name="DOUBLE_CLICK" xml:space="preserve">
    <value>Double Click (No delay)</value>
  </data>
  <data name="SIMPLE_CLICK_NO_DELAY" xml:space="preserve">
    <value>Simple Click (No Delay)</value>
  </data>
  <data name="DOFUS_HAVENBAG" xml:space="preserve">
    <value>Dofus Havenbag</value>
  </data>
  <data name="DOFUS_OPEN_DISCUSSION" xml:space="preserve">
    <value>Dofus Open Discussion</value>
  </data>
  <data name="GROUP_CHARACTERS" xml:space="preserve">
    <value>Group Characters</value>
  </data>
  <data name="TRAVEL" xml:space="preserve">
    <value>Travel</value>
  </data>
  <data name="OPTIONS" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="FILL_HDV" xml:space="preserve">
    <value>Fill HDV</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>Move Up</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>Move Down</value>
  </data>
  <data name="ChangeBackground" xml:space="preserve">
    <value>Change Background</value>
  </data>
  <data name="SelectBackgroundImage" xml:space="preserve">
    <value>Select Background Image</value>
  </data>
  <data name="ImageFiles" xml:space="preserve">
    <value>Image Files</value>
  </data>
  <data name="LanguageChanged" xml:space="preserve">
    <value>Language changed successfully. Please restart the application for all changes to take effect.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="Spanish" xml:space="preserve">
    <value>Español</value>
  </data>
  <data name="ClickWithDelay" xml:space="preserve">
    <value>CLICK with Delay</value>
  </data>
  <data name="ClickWithoutDelay" xml:space="preserve">
    <value>Click without Delay</value>
  </data>
  <data name="NextCharacter" xml:space="preserve">
    <value>Next character</value>
  </data>
  <data name="PreviousCharacter" xml:space="preserve">
    <value>Previous Character</value>
  </data>
  <data name="InputChatCommands" xml:space="preserve">
    <value>Input chat commands</value>
  </data>
  <data name="AutoCompleteHDV" xml:space="preserve">
    <value>Auto complete HDV (see position config) --&gt;</value>
  </data>
  <data name="PositionsConfig" xml:space="preserve">
    <value>Positions' config</value>
  </data>
  <data name="FunctionBind" xml:space="preserve">
    <value>FUNCTION ----&gt; Bind</value>
  </data>
  <data name="PasteOnAllWindows" xml:space="preserve">
    <value>Paste on all windows</value>
  </data>
  <data name="Validate" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="KeyCombinationInstruction" xml:space="preserve">
    <value> (Enter to confirm, Escape to cancel)</value>
  </data>
  <data name="AllFiles" xml:space="preserve">
    <value>All files (*.*)</value>
  </data>
  <data name="PASTE_ON_ALL_WINDOWS" xml:space="preserve">
    <value>Paste on All Windows</value>
  </data>
</root>